import string
import secrets
import os

# Nombre del archivo donde se guardar√°n las contrase√±as
ARCHIVO_CONTRASENAS = "passwords.txt"

def generar_contrasena():
    """
    Pregunta al usuario por la longitud y si desea s√≠mbolos,
    y genera una contrase√±a criptogr√°ficamente segura.
    """
    try:
        longitud = int(input("Introduce la longitud deseada para la contrase√±a: "))
        if longitud < 8:
            print("‚ö†Ô∏è Advertencia: Se recomienda una longitud de al menos 8 caracteres.")
    except ValueError:
        print("‚ùå Error: Debes introducir un n√∫mero v√°lido.")
        return None

    incluir_simbolos = input("¬øDeseas incluir s√≠mbolos (ej: @, #, $)? (s/n): ").lower()

    # Definimos el alfabeto de caracteres a usar
    caracteres = string.ascii_letters + string.digits  # Letras (may√∫s/min√∫s) y n√∫meros

    if incluir_simbolos == 's':
        caracteres += string.punctuation  # A√±adimos los s√≠mbolos

    # Usamos secrets para generar una contrase√±a segura
    contrasena = ''.join(secrets.choice(caracteres) for i in range(longitud))
    return contrasena

def guardar_contrasena(sitio, contrasena):
    """
    Guarda el sitio y la contrase√±a en el archivo de texto.
    El modo 'a' (append) a√±ade la l√≠nea al final sin borrar lo anterior.
    """
    with open(ARCHIVO_CONTRASENAS, 'a', encoding='utf-8') as f:
        f.write(f"{sitio}:{contrasena}\n")
    print(f"‚úÖ Contrase√±a para '{sitio}' guardada correctamente.")

def ver_contrasenas():
    """
    Lee y muestra las contrase√±as guardadas en el archivo.
    """
    if not os.path.exists(ARCHIVO_CONTRASENAS):
        print("üìÇ A√∫n no has guardado ninguna contrase√±a.")
        return

    print("\n--- Tus Contrase√±as Guardadas ---")
    with open(ARCHIVO_CONTRASENAS, 'r', encoding='utf-8') as f:
        lineas = f.readlines()
        if not lineas:
            print("üìÇ El archivo est√° vac√≠o.")
        else:
            for linea in lineas:
                # Usamos strip() para quitar saltos de l√≠nea y espacios
                sitio, contrasena = linea.strip().split(':', 1)
                print(f"Sitio: {sitio} | Contrase√±a: {contrasena}")
    print("---------------------------------\n")


def main():
    """
    Funci√≥n principal que muestra el men√∫ y gestiona las opciones del usuario.
    """
    while True:
        print("\n--==[ Men√∫ Principal ]==--")
        print("1. Crear y guardar una nueva contrase√±a")
        print("2. Ver contrase√±as guardadas")
        print("3. Salir")
        opcion = input("Elige una opci√≥n: ")

        if opcion == '1':
            nueva_contrasena = generar_contrasena()
            if nueva_contrasena:
                print(f"\nTu nueva contrase√±a generada es: {nueva_contrasena}")
                sitio = input("¬øPara qu√© sitio o servicio es esta contrase√±a?: ")
                guardar_contrasena(sitio, nueva_contrasena)
        elif opcion == '2':
            ver_contrasenas()
        elif opcion == '3':
            print("üëã ¬°Hasta la pr√≥xima!")
            break
        else:
            print("‚ùå Opci√≥n no v√°lida. Int√©ntalo de nuevo.")

# Esto asegura que el script se ejecute solo cuando lo corres directamente
if __name__ == "__main__":
    main()